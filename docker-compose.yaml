
# documentation: https://n8n.io
# slogan: n8n is an extendable workflow automation tool.
# tags: n8n,workflow,automation,open,source,low,code
# logo: svgs/n8n.png
# port: ${N8N_PORT:-5678}

version: "3.8"

volumes:
  db_storage:
  n8n_storage:
  redis_storage:

services:
  # ------------------------------------------------------------------ #
  # PostgreSQL                                                         #
  # ------------------------------------------------------------------ #
  postgres:
    image: postgres:16-alpine
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 20s
      retries: 10

  # ------------------------------------------------------------------ #
  # **Redis â€“ Bitnami build with env-driven credentials**              #
  # ------------------------------------------------------------------ #
  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${SERVICE_PASSWORD_REDIS}"]
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"$SERVICE_PASSWORD_REDIS\" ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 10

  # ------------------------------------------------------------------ #
  # n8n main instance                                                  #
  # ------------------------------------------------------------------ #
  n8n:
    image: n8n-custom:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${N8N_PORT}:5678"
    environment:
      - N8N_PORT=${N8N_PORT:-5678}
      - SERVICE_FQDN_N8N_5678
      - N8N_EDITOR_BASE_URL=${SERVICE_FQDN_N8N}
      - WEBHOOK_URL=${SERVICE_FQDN_N8N}
      - N8N_HOST=${SERVICE_URL_N8N}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES:-n8n}
      - DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES:-n8n}
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - N8N_ENCRYPTION_KEY=${SERVICE_BASE64_ENCRYPTIONKEY}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=true
      - N8N_ENABLE_EXTERNAL_MODULES=true
      - N8N_EXTERNAL_MODULES_ALLOWLIST=@aws-sdk/client-s3,@aws-sdk/lib-storage
      - NODE_FUNCTION_ALLOW_EXTERNAL=@aws-sdk/client-s3,@aws-sdk/lib-storage
      - NODE_PATH=/home/node/.n8n/lib/node_modules
    volumes:
      - n8n_storage:/home/node/.n8n
    # Using prebuilt image with AWS SDK baked in
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- localhost:5678/healthz >/dev/null 2>&1 || curl -fsS localhost:5678/healthz >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # ------------------------------------------------------------------ #
  # n8n worker (same Redis creds)                                      #
  # ------------------------------------------------------------------ #
  n8n-worker:
    image: n8n-custom:latest
    restart: always
    command: worker
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${SERVICE_USER_POSTGRES:-n8n}
      - DB_POSTGRESDB_PASSWORD=${SERVICE_PASSWORD_POSTGRES:-n8n}
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${SERVICE_PASSWORD_REDIS}
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - N8N_ENCRYPTION_KEY=${SERVICE_BASE64_ENCRYPTIONKEY}
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENABLE_EXTERNAL_MODULES=true
      - N8N_EXTERNAL_MODULES_ALLOWLIST=@aws-sdk/client-s3,@aws-sdk/lib-storage
      - NODE_FUNCTION_ALLOW_EXTERNAL=@aws-sdk/client-s3,@aws-sdk/lib-storage
      - NODE_PATH=/home/node/.n8n/lib/node_modules
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      - n8n
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- localhost:5678/healthz >/dev/null 2>&1 || curl -fsS localhost:5678/healthz >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
